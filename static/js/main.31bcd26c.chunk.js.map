{"version":3,"sources":["api/index.ts","components/Chart.tsx","components/ThemeHandler.tsx","App.tsx","index.tsx"],"names":["API","results","this","axios","get","method","request","data","response","filter","map","item","push","countryCode","dimensions","vardland_kod","gender","kon_kod","value","observations","antal","objs","Chart","React","useState","chartData","setChartData","useEffect","a","api","fetch","loadAPI","previousCountry","countries","index","Typography","component","variant","margin","valuesColumn","currentValue","i","values","reverse","padding","columns","colsMale","colsFemale","blocks","maxValue","columnValue","calculateColumnData","Box","bgcolor","width","height","display","flexDirection","justifyContent","alignItems","borderLeft","borderBottom","ThemeHandler","darkMode","setDarkMode","Switch","checked","onChange","color","title","name","App","theme","createTheme","palette","mode","ThemeProvider","ScopedCssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31bcd26c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport type ChartInfo = {\r\n\tcountryCode: string,\r\n\tgender: string,\r\n\tvalue: number\r\n}\r\n\r\nexport class API {\r\n\tprivate readonly results: Array<ChartInfo>;\r\n\r\n\tconstructor() {\r\n\t\tthis.results = [];\r\n\t}\r\n\r\n\tpublic async fetch(): Promise<Array<ChartInfo>> {\r\n\t\tconst url = \"https://cors-anywhere.herokuapp.com/https://www.forsakringskassan.se/fk_apps/MEKAREST/public/v1/iv-planerad/IVplaneradvardland.json\";\r\n\t\tconst request = await axios.get(url, { method: \"GET\" });\r\n\t\tconst response = await request.data;\r\n\r\n\t\tconst filteredResponse = this.filter(response as any);\r\n\r\n\t\tfilteredResponse.map(item => {\r\n\t\t\treturn this.results.push({\r\n\t\t\t\tcountryCode: item.dimensions.vardland_kod,\r\n\t\t\t\tgender: (item.dimensions.kon_kod === 'M') ? 'Male' : 'Female',\r\n\t\t\t\tvalue: item.observations.antal.value\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn this.results;\r\n\t}\r\n\r\n\tprivate filter(objs: Array<any>): Array<any> {\r\n\t\treturn objs.filter(item => {\r\n\t\t\tconst value = item.observations.antal.value;\r\n\t\t\tconst countryCode = item.dimensions.vardland_kod;\r\n\t\t\tconst gender = item.dimensions.kon_kod;\r\n\r\n\t\t\treturn (value > 3 && countryCode !== \"ALL\" && gender !== \"ALL\");\r\n\t\t});\r\n\t}\r\n}\r\n","import { Box, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport { API, ChartInfo } from '../api';\r\n\r\nexport const Chart: React.FC<any> = () => {\r\n\tconst [chartData, setChartData] = React.useState<Array<ChartInfo>>([]);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tasync function loadAPI(): Promise<void> {\r\n\t\t\tconst api = new API();\r\n\t\t\tsetChartData(await api.fetch());\r\n\t\t}\r\n\r\n\t\tloadAPI();\r\n\t}, []);\r\n\r\n\tlet previousCountry: string = \"\";\r\n\tconst countries = chartData.map((data, index) => {\r\n\t\tif (data.countryCode !== previousCountry) {\r\n\t\t\tpreviousCountry = data.countryCode;\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<Typography key={index} component=\"h5\" variant=\"h5\" margin=\"0 45px\">\r\n\t\t\t\t\t{data.countryCode}\r\n\t\t\t\t</Typography>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t});\r\n\r\n\r\n\t// Make an array with values ranging from 10 to 300\r\n\tconst valuesColumn: Array<number> = [];\r\n\tlet currentValue: number = 0;\r\n\tfor (let i = 0; i < 30; i++) {\r\n\t\tvaluesColumn.push(currentValue += 10);\r\n\t}\r\n\r\n\tconst values = valuesColumn.reverse().map((value, index) => {\r\n\t\treturn (\r\n\t\t\t<Typography key={index} component=\"h5\" variant=\"h5\" padding=\"2px\" margin=\"0 5px\">\r\n\t\t\t\t{value}\r\n\t\t\t</Typography>\r\n\t\t);\r\n\t});\r\n\r\n\tconst calculateColumnData = (maxValue: number) => {\r\n\t\tlet columnValue: number = 0;\r\n\t\tfor (let i = 0; i < maxValue; i++) {\r\n\t\t\tif (columnValue >= maxValue) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\r\n\t\t\tcolumnValue += 10;\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tconst columns = chartData.map((data, index) => {\r\n\t\tconst colsMale: Array<JSX.Element> = [];\r\n\t\tconst colsFemale: Array<JSX.Element> = [];\r\n\r\n\t\tconst blocks = calculateColumnData(data.value);\r\n\t\tfor (let i = 0; i < blocks; i++) {\r\n\t\t\tif (data.gender === \"Male\") {\r\n\t\t\t\tcolsMale.push(\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t<Box key={i} bgcolor=\"blue\" width=\"30px\" height=\"30px\" margin=\"2px 30px 2px 0px\" />\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcolsFemale.push(\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t<Box key={i} bgcolor=\"pink\" width=\"30px\" height=\"30px\" margin=\"2px 0px 2px 30px\" />\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Box key={index} display=\"flex\" flexDirection=\"row\" margin=\"2px\">\r\n\t\t\t\t<Box key={index} display=\"flex\" flexDirection=\"column-reverse\">\r\n\t\t\t\t\t{colsMale}\r\n\t\t\t\t\t{colsFemale}\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\r\n\t\t\t<Box display=\"flex\" flexDirection=\"column\" alignItems=\"flex-start\" justifyContent=\"flex-start\">\r\n\t\t\t\t{values}\r\n\t\t\t</Box>\r\n\t\t\t<Box display=\"flex\" flexDirection=\"column-reverse\">\r\n\t\t\t\t<Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\r\n\t\t\t\t\t{countries}\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-start\" borderLeft=\"1px solid gray\" borderBottom=\"1px solid gray\" height=\"87.5vh\">\r\n\t\t\t\t\t{columns}\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n}\r\n","import { Box, Switch } from '@mui/material';\r\nimport React from 'react';\r\n\r\ntype ThemeHandlerProps = {\r\n\tdarkMode: boolean,\r\n\tsetDarkMode: (darkMode: boolean) => void\r\n}\r\n\r\nexport const ThemeHandler: React.FC<ThemeHandlerProps> = ({ darkMode, setDarkMode }) => {\r\n\tconst handleModeChange = () => {\r\n\t\tsetDarkMode(!darkMode);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\" padding=\"10px\">\r\n\t\t\t<Switch\r\n\t\t\t\tchecked={darkMode}\r\n\t\t\t\tonChange={handleModeChange}\r\n\t\t\t\tcolor=\"default\"\r\n\t\t\t\ttitle={`switch to ${(darkMode === false) ? \"dark mode\" : \"light mode\"}`}\r\n\t\t\t\tname=\"theme toggler\"\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t);\r\n}\r\n","import { Box, createTheme, ScopedCssBaseline, ThemeProvider } from '@mui/material';\nimport React from 'react';\nimport { Chart, ThemeHandler } from './components';\n\nfunction App() {\n\tconst [darkMode, setDarkMode] = React.useState<boolean>(false);\n\tconst theme = createTheme(\n\t\t{\n\t\t\tpalette: {\n\t\t\t\tmode: darkMode ? \"dark\" : \"light\"\n\t\t\t}\n\t\t}\n\t);\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<ScopedCssBaseline>\n\t\t\t\t<Box height=\"100vh\">\n\t\t\t\t\t<ThemeHandler darkMode={darkMode} setDarkMode={setDarkMode} />\n\t\t\t\t\t<Chart />\n\t\t\t\t</Box>\n\t\t\t</ScopedCssBaseline>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}